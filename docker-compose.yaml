services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: app
    volumes:
      - .:/app
    ports:
      - 8080:8080
      - 50051:50051
      - 8000:8000
    depends_on:
      mysql:
        condition: service_healthy  
      rabbitmq:
        condition: service_healthy  
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_ROOT_PASSWORD --password=$$MYSQL_PASSWORD
      #test: ["CMD-SHELL", "mysqladmin status -u$$MYSQL_ROOT_PASSWORD -p$$MYSQL_PASSWORD --protocol=TCP"]
      interval: 10s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
volumes:
  rabbitmq_data: